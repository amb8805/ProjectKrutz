section#home.home
	section#promo.promo
		div.container
			div.row
				div.col-md-12.text-center
					h1.title.animated.fadeInUp.delayp2 Reverse Engineering of Androidâ„¢ Applications
					div.content
						p.lead.goal.animated.fadeInUp.delayp2 Our goal is to better understand mobile applications and how various software metrics may impact one another
						p.lead.animated.fadeInUp.delayp2 We have analyzed {{ apkCount | number }} applications to date
					a.btn.btn-lg.btn-theme(target='_blank', href='https://github.com/DroidDarwin/DarwinData') Download on GitHub

	section#overview.overview
		div.container
			div.row
				h1.title.text-center Project Overview
				div.col-md-6.col-sm-6.col-xs-12.text-center
					a(target='_blank', href='https://github.com/DroidDarwin/AnalyzingCode')
						span.fa-stack.fa-5x
							i.fa.fa-circle.fa-stack-2x
							i.fa.fa-download.fa-stack-1x.fa-inverse
					div.content 
						h2.subtitle Data Collection
						p We created a web scraper using Scrapy, a web scraping framework for Python, to collect over 30,000 APK files, as well as information on these files.
				div.col-md-6.col-sm-6.col-xs-12.text-center
					a(target='_blank', href='https://github.com/DroidDarwin/DarwinData')
						span.fa-stack.fa-5x
							i.fa.fa-circle.fa-stack-2x
							i.fa.fa-cogs.fa-stack-1x.fa-inverse
					div.content 
						h2.subtitle Data Analysis
						p We used a variety of existing tools to analyze the over- and underpermissions, risk level for potential malware, and other metrics of the collected files.

	section#results.results
		div.container
			div.row
				h1.title.text-center Highlighted Findings
			div.row
				div.col-md-7.col-md-push-5
					div.container.chart-container
						div.row.canvas1-holder-wrapper
							div.col-md-7.canvas1-holder
								canvas#chart1(height='225', width='225')
							div.col-md-5
						div.chart-loading(loading-spinner='chartsLoading')
				div.col-md-5.col-md-pull-7
					div.content
						h2.subtitle Popular Overprivileged Apps
						p Using Stowaway, a tool that determines the permissions in which an app is over- and underprivileged, we found that even some of the most-downloaded apps on Google Play violate the principle of least privilege.
			div.row.chart-row
				div.col-md-7
					div.container.chart-container
						div.canvas2-holder
							canvas#chart2(height='275', width='525')
						div.chart-loading(loading-spinner='chartsLoading')
				div.col-md-5
					div.content
						h2.subtitle Overprivileged Apps by Genre
						p We found that at least 20% of apps in each genre are overprivileged, and the majority of apps in 19 out of the 41 genres are overprivileged. These are the top 5 genres in which there are the highest percentage of overprivileged apps.
			div.row.chart-row
				div.col-md-7.col-md-push-5
					div.container.chart-container
						div.canvas3-holder
							canvas#chart3
						div.chart-loading(loading-spinner='chartsLoading')
				div.col-md-5.col-md-pull-7
					div.content
						h2.subtitle Overpermissions by Version Group
						p Within the top 5 largest genres, we found the average number of overpermissions for each version group (0 - 0.99, 1 - 1.99, and so forth). This result indicates that each genre maintains an overall increase in overpermissions over time.
